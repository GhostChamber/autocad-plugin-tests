// Next available MSG number is    10 
//
//////////////////////////////////////////////////////////////////////////////
//
//  Copyright 2016 Autodesk, Inc.  All rights reserved.
//
//  Use of this software is subject to the terms of the Autodesk license 
//  agreement provided at the time of installation or download, or which 
//  otherwise accompanies this software in either electronic or hard copy form.   
//
//////////////////////////////////////////////////////////////////////////////
//
// MODULE_ID AXTYPES_IDL_/
// axtypes.idl : Type library constants
//

    typedef [helpcontext(IDH_ENUMTYPES), uuid(011AC48B-0358-4579-89E7-4B01EA08FC00)] [v1_enum] enum AcBoolean
    {
        // Switches
        acFalse = 0,
        acTrue = 1
    } AcBoolean;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E37096DF-5305-435F-8EE5-4FDD1360BB38)] [v1_enum] enum AcOnOff
    {
        // Switches
        acOff = 0,
        acOn = 1
    } AcOnOff;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6AE73245-B6CC-466A-98E4-DC936EFFE511)] [v1_enum] enum AcEntityName
    {
        // Entities
        ac3dFace = 1,
        ac3dPolyline = 2,
        ac3dSolid = 3,
        acArc = 4,
        acAttribute = 5,
        acAttributeReference = 6,
        acBlockReference = 7,
        acCircle = 8,
        acDimAligned = 9,
        acDimAngular = 10,

        acDimDiametric = 12,
        acDimOrdinate = 13,
        acDimRadial = 14,
        acDimRotated = 15,
        acEllipse = 16,
        acHatch = 17,
        acLeader = 18,
        acLine = 19,

        acMtext = 21,
        acPoint = 22,
        acPolyline = 23,
        acPolylineLight = 24,
        acPolymesh = 25,
        acRaster = 26,
        acRay = 27,
        acRegion = 28,
        acShape = 29,
        acSolid = 30,
        acSpline = 31,
        acText = 32,
        acTolerance = 33,
        acTrace = 34,
        acPViewport = 35,
        acXline = 36,
        acGroup = 37,
        acMInsertBlock = 38,
        acPolyfaceMesh = 39,
        acMLine = 40,
        acDim3PointAngular = 41,
        acExternalReference = 42,
        acTable = 43,
        acDimArcLength = 44,
		acDimRadialLarge = 45,
        acDwfUnderlay = 46,
        acDgnUnderlay = 47,
        acMLeader = 48,
        acSubDMesh = 49,
		acPdfUnderlay = 50,
        acNurbSurface  =51
    } AcEntityName;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(7120D378-B31F-4CF8-9854-D7B1135FBD26)] [v1_enum] enum AcActiveSpace
    {
        // Paper/Model space
        acPaperSpace = 0,
        acModelSpace = 1
    } AcActiveSpace;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(904447CA-E4AA-4B57-8F49-9ADAFC189CCE)] [v1_enum] enum AcKeyboardAccelerator
    {
        // Preferences
        acPreferenceClassic = 0,
        acPreferenceCustom = 1
    } AcKeyboardAccelerator;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(52A82479-83F7-44A9-BA2C-5A2A1EAD06E0)] [v1_enum] enum AcPlotOrientation
    {
        // Plot Orientation
        acPlotOrientationPortrait = 0,
        acPlotOrientationLandscape = 1
    } AcPlotOrientation;

    //Note: the entity color property still takes an int to
    //allow color values other than the ones listed here.
    typedef [helpcontext(IDH_ENUMTYPES), uuid(F3C8E009-AE20-44BF-B92A-2C6CB1BF4CB8)] [v1_enum] enum AcColor
    {
        // AutoCAD's color palette
        [helpstring(/*AXTYPES_IDL_1*/"Color Byblock.")]
        acByBlock = 0,
        [helpstring(/*AXTYPES_IDL_2*/"Color Red.")]
        acRed = 1,
        [helpstring(/*AXTYPES_IDL_3*/"Color Yellow.")]
        acYellow = 2,
        [helpstring(/*AXTYPES_IDL_4*/"Color Green.")]
        acGreen = 3,
        [helpstring(/*AXTYPES_IDL_5*/"Color Cyan.")]
        acCyan = 4,
        [helpstring(/*AXTYPES_IDL_6*/"Color Blue.")]
        acBlue = 5,
        [helpstring(/*AXTYPES_IDL_7*/"Color Magenta.")]
        acMagenta = 6,
        [helpstring(/*AXTYPES_IDL_8*/"Color White.")]
        acWhite = 7,
        [helpstring(/*AXTYPES_IDL_9*/"Color Bylayer.")]
        acByLayer = 256
    } AcColor;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2006AACA-FDBD-4841-92BB-9E7F0CF71701)] [v1_enum] enum AcAttachmentPoint
    {
        // AttachmentPoint[Mtext]
        acAttachmentPointTopLeft = 1,
        acAttachmentPointTopCenter = 2,
        acAttachmentPointTopRight = 3,
        acAttachmentPointMiddleLeft = 4,
        acAttachmentPointMiddleCenter = 5,
        acAttachmentPointMiddleRight = 6,
        acAttachmentPointBottomLeft = 7,
        acAttachmentPointBottomCenter = 8,
        acAttachmentPointBottomRight = 9
    } AcAttachmentPoint;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6DB7769F-35C5-4613-9EC2-3C4FF8B43A66)] [v1_enum] enum AcDrawingDirection
    {
        // Mtext.DrawingDirection
        acLeftToRight = 1,
        acRightToLeft = 2,
        acTopToBottom = 3,
        acBottomToTop = 4,
        acByStyle     = 5
    } AcDrawingDirection;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(CBE6C03D-5A08-4193-A408-E17BF1696F27)] [v1_enum] enum AcLeaderType
    {
        // Pathtype [Leader]
        acLineNoArrow = 0,
        acSplineNoArrow = 1,
        acLineWithArrow = 2,
        acSplineWithArrow = 3
    } AcLeaderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B3A65529-02EA-4558-988C-973C44BCB649)] [v1_enum] enum AcAttributeMode
    {
        // Attribute Mode
        acAttributeModeNormal = 0,
        acAttributeModeInvisible = 1,
        acAttributeModeConstant = 2,
        acAttributeModeVerify = 4,
        acAttributeModePreset = 8,
        acAttributeModeLockPosition = 16,
        acAttributeModeMultipleLine = 32
    } AcAttributeMode;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3A39CA68-71B0-4DDE-9AFD-2F744EAE7858)] [v1_enum] enum AcHorizontalAlignment
    {
        // Attribute.HorizontalAlignment
        acHorizontalAlignmentLeft = 0,
        acHorizontalAlignmentCenter = 1,
        acHorizontalAlignmentRight = 2,
        acHorizontalAlignmentAligned = 3,
        acHorizontalAlignmentMiddle = 4,
        acHorizontalAlignmentFit = 5
    } AcHorizontalAlignment;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(051BA5E5-7013-402D-B2E7-D23E8DE8EE61)] [v1_enum] enum AcVerticalAlignment
    {
        // Attribute.VerticalAlignment
        acVerticalAlignmentBaseline = 0,
        acVerticalAlignmentBottom = 1,
        acVerticalAlignmentMiddle = 2,
        acVerticalAlignmentTop = 3
    } AcVerticalAlignment;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6F485E0C-6EA9-4D2D-AC39-1E3FC453A17C)] [v1_enum] enum AcTextGenerationFlag
    {
        // Text Flag Setting
        acTextFlagBackward = 2,
        acTextFlagUpsideDown = 4
    } AcTextGenerationFlag;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(4A5A4FC8-418D-484A-8C81-9157CD0BC477)] [v1_enum] enum AcSelect
    {
        // SelectionSet Mode
        acSelectionSetWindow = 0,
        acSelectionSetCrossing = 1,
        acSelectionSetFence = 2,
        acSelectionSetPrevious = 3,
        acSelectionSetLast = 4,
        acSelectionSetAll = 5,
        acSelectionSetWindowPolygon = 6,
        acSelectionSetCrossingPolygon = 7
    } AcSelect;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(4D3A1D54-CF19-45EE-AE97-CD097B714C3B)] [v1_enum] enum AcPatternType
    {
        // Hatch
        // PatternType
        acHatchPatternTypeUserDefined = 0,
        acHatchPatternTypePreDefined = 1,
        acHatchPatternTypeCustomDefined = 2
    } AcPatternType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1AAD3D83-86F3-437D-8F88-32755FA9D0CF)] [v1_enum] enum AcLoopType
    {
        // Hatch Style
        acHatchLoopTypeDefault = 0,
        acHatchLoopTypeExternal = 1,
        acHatchLoopTypePolyline = 2,
        acHatchLoopTypeDerived = 4,
        acHatchLoopTypeTextbox = 8
    } AcLoopType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5A6267B2-88F4-43F8-A796-A0D15FFEA41E)] [v1_enum] enum AcHatchStyle
    {
        acHatchStyleNormal = 0,
        acHatchStyleOuter = 1,
        acHatchStyleIgnore = 2 
    } AcHatchStyle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B48FA747-E713-424B-9B9D-3775D70F50A0)] [v1_enum] enum AcPolylineType
    {
        // Polyline type
        acSimplePoly = 0,
        acFitCurvePoly = 1,
        acQuadSplinePoly = 2,
        acCubicSplinePoly = 3
    } AcPolylineType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BC88B1D1-6D2B-4422-B413-11381EE41605)] [v1_enum] enum Ac3DPolylineType
    {
        // 3dPolyline type
        acSimple3DPoly = 0,
        acQuadSpline3DPoly = 1,
        acCubicSpline3DPoly = 2
    } Ac3DPolylineType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(A8FC852D-A12F-456B-A405-828939CD7CAB)] [v1_enum] enum AcViewportSplitType
    {
        // Viewport Split Modes
        acViewport2Horizontal = 0,
        acViewport2Vertical = 1,
        acViewport3Left = 2,
        acViewport3Right = 3,
        acViewport3Horizontal = 4,
        acViewport3Vertical = 5,
        acViewport3Above = 6,
        acViewport3Below = 7,
        acViewport4 = 8
    } AcViewportSplitType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B4FD91FC-3D8F-44C2-BA09-54437235A2FB)] [v1_enum] enum AcRegenType
    {
        // Application regen constants
        acActiveViewport = 0,
        acAllViewports = 1
    } AcRegenType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(17B013EE-3D13-414C-B2BD-937D476669A5)] [v1_enum] enum AcBooleanType
    {
        // Constants for boolean operation
        acUnion = 0,
        acIntersection = 1,
        acSubtraction = 2
    } AcBooleanType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(12E1D93B-F251-4147-BE44-3587D7CF4FAC)] [v1_enum] enum AcExtendOption
    {
        // Constants for IntersectWith
        acExtendNone = 0,
        acExtendThisEntity = 1,
        acExtendOtherEntity = 2,
        acExtendBoth = 3
    } AcExtendOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2CE65E61-AB75-4EFA-A2A7-92879941DA12)] [v1_enum] enum AcAngleUnits
    {
        // Constants for Interactive Functions
        acDegrees = 0,
        acDegreeMinuteSeconds = 1,
        acGrads = 2,
        acRadians = 3
    } AcAngleUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(CADF3BA8-4991-4632-8AE0-8F94D89F4622)] [v1_enum] enum AcUnits
    {
        // Units for distof
        acDefaultUnits = -1,
        acScientific = 1,
        acDecimal = 2,
        acEngineering = 3,
        acArchitectural = 4,
        acFractional = 5
    } AcUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5820AB2D-D867-48D6-AD41-1C0796010298)] [v1_enum] enum AcCoordinateSystem
    {
        // Constants for coordinate system transformations
        acWorld = 0,
        acUCS = 1,
        acDisplayDCS = 2,
        acPaperSpaceDCS = 3,
        acOCS = 4,
    } AcCoordinateSystem;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1E3C525D-EA24-44A6-9F22-2339E69AEEB8)] [v1_enum] enum AcMeasurementUnits
    {
        // Constants for MeasurementUnits property off of Preference
        acEnglish = 0,
        acMetric = 1,
    } AcMeasurementUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(53F19AAE-24DD-49D6-BBB4-9959479C9C84)] [v1_enum] enum AcXRefDemandLoad
    {
        // Constants for XRefDemandLoad property off of Preference
        acDemandLoadDisabled = 0,
        acDemandLoadEnabled = 1,
        acDemandLoadEnabledWithCopy = 2
    } AcXRefDemandLoad;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(A2798989-F70C-4AA6-BA0D-3754B440DC19)] [v1_enum] enum AcPreviewMode
    {
        // Constants for Plot preview
        acPartialPreview = 0,
        acFullPreview = 1
    } AcPreviewMode;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6616272C-5CA2-4566-954E-8845BAABABEE)] [v1_enum] enum AcPolymeshType
    {
        // Polymesh type
        acSimpleMesh = 0,
        acQuadSurfaceMesh = 5,
        acCubicSurfaceMesh = 6,
        acBezierSurfaceMesh = 8
    } AcPolymeshType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9CE662CB-7F34-4520-AC7F-062912C2E10F)] [v1_enum] enum AcZoomScaleType
    {
        // Zoom
        acZoomScaledAbsolute =  0,
        acZoomScaledRelative =  1,
        acZoomScaledRelativePSpace =  2
    } AcZoomScaleType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(78E07674-DE7F-44EA-93AB-6CB4E49063F3)] [v1_enum] enum AcDragDisplayMode
    {
        // DisplayedDragObject
        acDragDoNotDisplay = 0,
        acDragDisplayOnRequest = 1,
        acDragDisplayAutomatically = 2
    } AcDragDisplayMode;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(80D58384-70B1-4F8C-846F-FFFCB2E42F72)] [v1_enum] enum AcARXDemandLoad
    {
        // Proxy detection
        acDemanLoadDisable = 0,
        acDemandLoadOnObjectDetect = 1,
        acDemandLoadCmdInvoke    = 2
    } AcARXDemandLoad;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(10804913-2FA9-46DD-966F-E80242571DD0)] [v1_enum] enum AcTextFontStyle
    {
        acFontRegular = 0,
        acFontItalic = 1,
        acFontBold = 2,
        acFontBoldItalic = 3
    } AcTextFontStyle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(51B79F60-4AF9-4EAD-913D-B662633A421D)] [v1_enum] enum AcProxyImage
    {
        acProxyNotShow = 0,
        acProxyShow = 1,
        acProxyBoundingBox = 2
    } AcProxyImage;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3BBFF6D1-4AB1-4139-B091-0C5E4268D980)] [v1_enum] enum AcKeyboardPriority
    {
        acKeyboardRunningObjSnap = 0,
        acKeyboardEntry = 1,
        acKeyboardEntryExceptScripts = 2
    } AcKeyboardPriority;

    // Constants for Speller Dialect
    // The strings are extentions and do
    // not need translation.  However,
    // the constant names should be translated
    const LPSTR acAmericanEnglish = "enu";
    const LPSTR acAustralianEnglish = "ena";
    const LPSTR acBritishEnglishIse = "ens";
    const LPSTR acBritishEnglishIze = "enz";
    const LPSTR acCatalan = "ca";
    const LPSTR acCzech = "cs";
    const LPSTR acDanish = "da";
    const LPSTR acDutchPrim = "nl";
    const LPSTR acDutchSec = "nls";
    const LPSTR acFinnish = "fi";
    const LPSTR acFrenchUnaccentCap = "fr";
    const LPSTR acFrenchAccentCap = "fra";
    const LPSTR acGermanScharfesS = "de";
    const LPSTR acGermanDoppleS = "ded";
    const LPSTR acItalian = "it";
    const LPSTR acNorwegianBokmal = "no";
    const LPSTR acNorwegianNynorsk = "non";
    const LPSTR acPortugueseIberian = "pt";
    const LPSTR acPortugueseBrazilian = "ptb";
    const LPSTR acRussianInfrequentIo = "ru";
    const LPSTR acRussianFrequentIo = "rui";
    const LPSTR acSpanishUnaccentCap = "es";
    const LPSTR acSpanishAccentCap = "esa";
    const LPSTR acSwedish = "sv";

    typedef [helpcontext(IDH_ENUMTYPES), uuid(C19898CB-B89E-4A92-8209-B9AD7F414168)] [v1_enum] enum AcMenuGroupType
    {
        acBaseMenuGroup = 0,
        acPartialMenuGroup = 1
    } AcMenuGroupType;


    typedef [helpcontext(IDH_ENUMTYPES), uuid(AA290C27-BABF-4D02-9298-9F2322D1B644)] [v1_enum] enum AcMenuFileType
    {
        acMenuFileCompiled = 0,
        acMenuFileSource = 1
    } AcMenuFileType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(FD395D9C-09FE-44D5-BB6B-F25B1538D162)] [v1_enum] enum AcMenuItemType
    {
        acMenuItem = 0,
        acMenuSeparator = 1,
        acMenuSubMenu = 2
    } AcMenuItemType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(51A6EA58-F115-4056-83CA-60FBCC12188E)] [v1_enum] enum AcToolbarItemType
    {
        acToolbarButton = 0,
        acToolbarSeparator = 1,
        acToolbarControl = 2,
        acToolbarFlyout = 3
    } AcToolbarItemType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E0CC305F-1C21-4030-A0AD-11469B7E8CBE)] [v1_enum] enum AcToolbarDockStatus
    {
        acToolbarDockTop = 0,
        acToolbarDockBottom = 1,
        acToolbarDockLeft = 2,
        acToolbarDockRight = 3,
        acToolbarFloating = 4
    } AcToolbarDockStatus;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(66A01FE7-AF03-4745-A9A6-8857B08AAA3C)] [v1_enum] enum AcLineWeight
    { 
        acLnWt000          =   0,
        acLnWt005          =   5,
        acLnWt009          =   9,
        acLnWt013          =  13,
        acLnWt015          =  15,
        acLnWt018          =  18,
        acLnWt020          =  20,
        acLnWt025          =  25,
        acLnWt030          =  30,
        acLnWt035          =  35,
        acLnWt040          =  40,
        acLnWt050          =  50,
        acLnWt053          =  53,
        acLnWt060          =  60,
        acLnWt070          =  70,
        acLnWt080          =  80,
        acLnWt090          =  90,
        acLnWt100          = 100,
        acLnWt106          = 106,
        acLnWt120          = 120,
        acLnWt140          = 140,
        acLnWt158          = 158,
        acLnWt200          = 200,
        acLnWt211          = 211,
        acLnWtByLayer      = -1,
        acLnWtByBlock      = -2,
        acLnWtByLwDefault  = -3
    } AcLineWeight;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(0FDA74B0-2E08-495D-AA55-266F8CF95195)] [v1_enum] enum AcWindowState
    {
        acNorm = 1,
        acMin,
        acMax
    } AcWindowState;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(119C61F8-3A8D-4D6A-9028-7ABB7432B3A8)] [v1_enum] enum AcPlotPaperUnits
    {
        acInches = 0,
        acMillimeters,
        acPixels
    } AcPlotPaperUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(856605A1-BCFA-43C6-9718-A967E5FC78C5)] [v1_enum] enum AcPlotRotation
    {
        ac0degrees = 0,
        ac90degrees,
        ac180degrees,
        ac270degrees
    } AcPlotRotation;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(49E32D8E-2304-462A-BB08-F4A5A33D92EB)] [v1_enum] enum AcPlotType
    {
        acDisplay = 0,
        acExtents,
        acLimits,
        acView,
        acWindow,
        acLayout
    } AcPlotType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5E447CA2-1E02-4985-AEB9-FAC33C716874)] [v1_enum] enum AcPlotScale
    {
        acScaleToFit = 0,              // Scaled to Fit
        ac1_128in_1ft,                 // 1/128"= 1'
        ac1_64in_1ft,                  // 1/64"= 1'
        ac1_32in_1ft,                  // 1/32"= 1'
        ac1_16in_1ft,                  // 1/16"= 1'
        ac3_32in_1ft,                  // 3/32"= 1'
        ac1_8in_1ft,                   // 1/8" = 1'
        ac3_16in_1ft,                  // 3/16"= 1'
        ac1_4in_1ft,                   // 1/4" = 1'
        ac3_8in_1ft,                   // 3/8" = 1'
        ac1_2in_1ft,                   // 1/2" = 1'
        ac3_4in_1ft,                   // 3/4" = 1'
        ac1in_1ft,                     // 1"= 1'
        ac3in_1ft,                     // 3"= 1'
        ac6in_1ft,                     // 6"= 1'
        ac1ft_1ft,                     // 1'= 1'
        ac1_1,                         // 1:1
        ac1_2,                         // 1:2
        ac1_4,                         // 1:4
        ac1_5,                         // 1:5
        ac1_8,                         // 1:8
        ac1_10,                        // 1:10
        ac1_16,                        // 1:16           
        ac1_20,                        // 1:20
        ac1_30,                        // 1:30
        ac1_40,                        // 1:40
        ac1_50,                        // 1:50
        ac1_100,                       // 1:100
        ac2_1,                         // 2:1
        ac4_1,                         // 4:1
        ac8_1,                         // 8:1
        ac10_1,                        // 10:1
        ac100_1,                       // 100:1
    } AcPlotScale;     

    // values messaged for ease of use in separating and combining the
    // vertical and horizontal alignment values
    // look at DXF group code documentation for more information
    typedef [helpcontext(IDH_ENUMTYPES), uuid(F866D3EA-0212-4E5B-A54F-F9306D5912A3)] [v1_enum] enum AcAlignment
    {
        acAlignmentLeft = 0,
        acAlignmentCenter,
        acAlignmentRight,
        acAlignmentAligned,
        acAlignmentMiddle,
        acAlignmentFit,
        acAlignmentTopLeft,
        acAlignmentTopCenter,
        acAlignmentTopRight,
        acAlignmentMiddleLeft,
        acAlignmentMiddleCenter,
        acAlignmentMiddleRight,
        acAlignmentBottomLeft,
        acAlignmentBottomCenter,
        acAlignmentBottomRight
    } AcAlignment;

    // Typdefs for stock property types
    typedef [helpcontext(IDH_ENUMTYPES), uuid(D4ACD224-C98E-492D-9416-C0842F82F316)] [public] AcColor       ACAD_COLOR;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(B2BFBA4D-AC84-4960-8469-D17C4F7499B9)] [public] BSTR          ACAD_LAYER;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(BD06078E-ACB9-4A2A-9FA7-370B85DB4285)] [public] BSTR          ACAD_LTYPE;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(9DB5D511-0CA5-4805-94E6-22E6D31908B6)] [public] long          ACAD_NULL;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(89F7A5F1-22B3-4C99-A53C-3155161F41EC)] [public] double        ACAD_DISTANCE;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(C41720B1-38DE-4CDF-8192-5FC93A1D24FB)] [public] double        ACAD_ANGLE;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(85DA15BA-FEE1-4DD1-8352-353E364DC511)] [public] AcLineWeight  ACAD_LWEIGHT;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(C3DFB3BD-24F9-47D3-8E63-1852E04E48F2)] [public] double        ACAD_NOUNITS;
    typedef [helpcontext(IDH_ENUMTYPES), uuid(8C9D527B-92F7-40C6-8391-E15DF51B2A17)] [public] VARIANT       ACAD_POINT;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(EF650BA0-92AE-4759-A26B-0F1173C527EF)] [v1_enum] enum AcLineSpacingStyle
    {
        // Mtext: lineSpacingStyle/setLineSpacingStyle
        acLineSpacingStyleAtLeast = 1,
        acLineSpacingStyleExactly = 2,
    } AcLineSpacingStyle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5D265257-ED55-410A-BE23-2F7F3488F06B)] [v1_enum] enum AcDimPrecision
    {
        //DIMADEC
        acDimPrecisionZero = 0,
        acDimPrecisionOne,
        acDimPrecisionTwo,
        acDimPrecisionThree,
        acDimPrecisionFour,
        acDimPrecisionFive,
        acDimPrecisionSix,
        acDimPrecisionSeven,
        acDimPrecisionEight
    } AcDimPrecision;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8EB4FB13-3444-4BBB-AEC8-AB63855EC7AF)] [v1_enum] enum AcDimUnits
    {
        //DIMALTU
        acDimScientific = 1,
        acDimDecimal,
        acDimEngineering,
        acDimArchitecturalStacked,
        acDimFractionalStacked,
        acDimArchitectural,
        acDimFractional,
        acDimWindowsDesktop
    } AcDimUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1086A671-2404-4FFB-916D-BAF06DCED56E)] [v1_enum] enum AcDimLUnits
    {
        //DIMLUNIT
        acDimLScientific = 1,
        acDimLDecimal,
        acDimLEngineering,
        acDimLArchitectural,
        acDimLFractional,
        acDimLWindowsDesktop
    } AcDimLUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9E7D7AD9-730E-47A0-85D2-FC0100928C5D)] [v1_enum] enum AcDimArrowheadType
    {
        //DIMBLK1
        acArrowDefault       = 0,
        acArrowClosedBlank   = 1,
        acArrowClosed        = 2,
        acArrowDot           = 3,
        acArrowArchTick      = 4,
        acArrowOblique       = 5,    
        acArrowOpen          = 6,
        acArrowOrigin        = 7,
        acArrowOrigin2       = 8,
        acArrowOpen90        = 9,    
        acArrowOpen30        = 10,
        acArrowDotSmall      = 11,
        acArrowDotBlank      = 12,
        acArrowSmall         = 13,
        acArrowBoxBlank      = 14,
        acArrowBoxFilled     = 15,
        acArrowDatumBlank    = 16,
        acArrowDatumFilled   = 17,
        acArrowIntegral      = 18,
        acArrowNone          = 19,
        acArrowUserDefined   = 20
    } AcDimArrowheadType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6248379E-88A4-438A-9238-B4524894C228)] [v1_enum] enum AcDimCenterType
    {
        //DIMBLK1
        acCenterMark = 0,
        acCenterLine,
        acCenterNone
    } AcDimCenterType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(912D9E9F-80C6-4104-8F1D-EF228B67E675)] [v1_enum] enum AcDimFit
    {
        //DIMFIT2
        acTextAndArrows = 0,
        acArrowsOnly,
        acTextOnly,
        acBestFit
    } AcDimFit;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6FAB0BC6-6EE1-4DC8-977C-E940D7654784)] [v1_enum] enum AcDimFractionType
    {
        //FIMFIT2
        acHorizontal = 0,
        acDiagonal,
        acNotStacked
    } AcDimFractionType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8647E6B5-51F4-419A-B786-54C17A352EB2)] [v1_enum] enum AcDimArcLengthSymbol
    {
        //Arc length symbol position
        acSymInFront = 0,
        acSymAbove,
        acSymNone
    } AcDimArcLengthSymbol;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8B23D9B1-601D-4601-B0E2-6B862CCC2914)] [v1_enum] enum AcDimHorizontalJustification
    {
        //FIMFIT2
        acHorzCentered = 0,
        acFirstExtensionLine,
        acSecondExtensionLine,
        acOverFirstExtension,
        acOverSecondExtension
    } AcDimHorizontalJustification;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2240654A-FDD1-49EC-857D-228349ABC202)] [v1_enum] enum AcDimVerticalJustification
    {
        //FIMFIT2
        acVertCentered = 0,
        acAbove,
        acOutside,
        acJIS,
        acUnder
    } AcDimVerticalJustification;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(CE2851F1-1B85-473F-B6D5-691C0DDACD6E)] [v1_enum] enum AcDimTextMovement
    {
        //DIMTMOVE
        acDimLineWithText = 0,
        acMoveTextAddLeader,
        acMoveTextNoLeader
    } AcDimTextMovement;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(C65C1F53-3479-4808-9FD4-E3A964661304)] [v1_enum] enum AcDimToleranceMethod
    {
        //DIMTOL
        acTolNone = 0,
        acTolSymmetrical,
        acTolDeviation,
        acTolLimits,
        acTolBasic
    } AcDimToleranceMethod;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BE9C9535-1906-4060-8E4D-1EFE89F4D661)] [v1_enum] enum AcDimToleranceJustify
    {
        //DIMTOLJ
        acTolBottom = 0,
        acTolMiddle,
        acTolTop
    } AcDimToleranceJustify;
    
    typedef [helpcontext(IDH_ENUMTYPES), uuid(7F81CC4E-E21C-4C09-AC0A-68FB236FE002)] [v1_enum] enum AcViewportScale
    {
        acVpScaleToFit = 0,              // Scaled to Fit
        acVpCustomScale,                 
        // standard default scales
        acVp1_1,                         // 1:1
        acVp1_2,                         // 1:2
        acVp1_4,                         // 1:4
        acVp1_5,                         // 1:5
        acVp1_8,                         // 1:8
        acVp1_10,                        // 1:10
        acVp1_16,                        // 1:16           
        acVp1_20,                        // 1:20
        acVp1_30,                        // 1:30
        acVp1_40,                        // 1:40
        acVp1_50,                        // 1:50
        acVp1_100,                       // 1:100
        acVp2_1,                         // 2:1
        acVp4_1,                         // 4:1
        acVp8_1,                         // 8:1
        acVp10_1,                        // 10:1
        acVp100_1,                       // 100:1
        acVp1_128in_1ft,                 // 1/128"= 1'
        acVp1_64in_1ft,                  // 1/64"= 1'
        acVp1_32in_1ft,                  // 1/32"= 1'
        acVp1_16in_1ft,                  // 1/16"= 1'
        acVp3_32in_1ft,                  // 3/32"= 1'
        acVp1_8in_1ft,                   // 1/8" = 1'
        acVp3_16in_1ft,                  // 3/16"= 1'
        acVp1_4in_1ft,                   // 1/4" = 1'
        acVp3_8in_1ft,                   // 3/8" = 1'
        acVp1_2in_1ft,                   // 1/2" = 1'
        acVp3_4in_1ft,                   // 3/4" = 1'
        acVp1in_1ft,                     // 1"= 1'
        acVp1and1_2in_1ft,               // 1 1/2"= 1'
        acVp3in_1ft,                     // 3"= 1'
        acVp6in_1ft,                     // 6"= 1'
        acVp1ft_1ft,                     // 1'= 1'
    } AcViewportScale;     

    typedef [helpcontext(IDH_ENUMTYPES), uuid(4893C9BF-CD76-435E-B2BD-9166CE22EEBC)] [v1_enum] enum AcISOPenWidth
    {
        acPenWidth013 =  13,
        acPenWidth018 =  18,
        acPenWidth025 =  25,
        acPenWidth035 =  35,
        acPenWidth050 =  50,
        acPenWidth070 =  70,
        acPenWidth100 = 100,
        acPenWidth140 = 140,
        acPenWidth200 = 200,
        acPenWidthUnk =  -1
    } AcISOPenWidth;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(21E3D12C-AB05-4D3A-9FF3-B3803FCD8AD0)] [v1_enum] enum AcSaveAsType
    {
        // These must match the corresponding values in AcApDocument::SaveFormat

        acUnknown = -1,
        acR12_dxf = 1,
        acR13_dwg = 4,
        acR13_dxf = 5,
        acR14_dwg = 8,
        acR14_dxf = 9,
        ac2000_dwg = 12,
        ac2000_dxf = 13,
        ac2000_Template = 14,
        ac2004_dwg = 24,
        ac2004_dxf = 25,
        ac2004_Template = 26,
        ac2007_dwg = 36,
        ac2007_dxf = 37,
        ac2007_Template = 38,
        ac2010_dwg = 48,
        ac2010_dxf = 49,
        ac2010_Template = 50,
        ac2013_dwg = 60,
        ac2013_dxf = 61,
        ac2013_Template = 62,

        acNative = ac2013_dwg,

        // aliases
        acR15_dwg = ac2000_dwg,
        acR15_dxf = ac2000_dxf,
        acR15_Template = ac2000_Template,
        acR18_dwg = ac2004_dwg,
        acR18_dxf = ac2004_dxf,
        acR18_Template = ac2004_Template
    } AcSaveAsType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(AA1A6C60-2262-42D9-B3D9-A4C523B467F3)] [v1_enum] enum AcPrinterSpoolAlert
    {
        acPrinterAlwaysAlert = 0,
        acPrinterAlertOnce,
        acPrinterNeverAlertLogOnce,
        acPrinterNeverAlert
    } AcPrinterSpoolAlert;


    typedef [helpcontext(IDH_ENUMTYPES), uuid(E60D7F00-2423-41E0-80E4-509096DA4B75)] [v1_enum] enum AcPlotPolicyForNewDwgs
    {
        acPolicyNewDefault = 0,
        acPolicyNewLegacy
    } AcPlotPolicyForNewDwgs;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(481BAF8E-AD2F-4FFC-8433-56D0833675BB)] [v1_enum] enum AcPlotPolicyForLegacyDwgs
    {
        acPolicyLegacyDefault = 0,
        acPolicyLegacyQuery,
        acPolicyLegacyLegacy
    } AcPlotPolicyForLegacyDwgs;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6333C5D6-A89F-4FB4-92B3-42E1970D4B32)] [v1_enum] enum AcOleQuality
    {
        acOQLineArt = 0,
        acOQText,
        acOQGraphics,
        acOQPhoto,
        acOQHighPhoto
    } AcOleQuality;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B274087E-B3CB-4EC6-94B6-76BCADAA0D6F)] [v1_enum] enum AcLoadPalette
    {
        acPaletteByDrawing = 0,
        acPaletteBySession
    } AcLoadPalette;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2AFDC885-1E3C-4373-B105-6A67F0B2FDC3)] [v1_enum] enum AcInsertUnits
    {
        acInsertUnitsUnitless = 0,
        acInsertUnitsInches,
        acInsertUnitsFeet,
        acInsertUnitsMiles,
        acInsertUnitsMillimeters,
        acInsertUnitsCentimeters,
        acInsertUnitsMeters,
        acInsertUnitsKilometers,
        acInsertUnitsMicroinches,
        acInsertUnitsMils,
        acInsertUnitsYards,
        acInsertUnitsAngstroms,
        acInsertUnitsNanometers,
        acInsertUnitsMicrons,
        acInsertUnitsDecimeters,
        acInsertUnitsDecameters,
        acInsertUnitsHectometers,
        acInsertUnitsGigameters,
        acInsertUnitsAstronomicalUnits,
        acInsertUnitsLightYears,
        acInsertUnitsParsecs,
        acInsertUnitsUSSurveyFeet,
        acInsertUnitsUSSurveyInch,
        acInsertUnitsUSSurveyYard,
        acInsertUnitsUSSurveyMile
    } AcInsertUnits;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(0A5622CF-2393-4138-94DD-CB0EDAFEFC89)] [v1_enum] enum AcAlignmentPointAcquisition
    {
        acAlignPntAcquisitionAutomatic = 0,
        acAlignPntAcquisitionShiftToAcquire
    } AcAlignmentPointAcquisition;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3EBEF8B9-5F32-4DD0-8852-141603AB1C9B)] [v1_enum] enum AcInsertUnitsAction
    {
        acInsertUnitsPrompt = 0,
        acInsertUnitsAutoAssign
    } AcInsertUnitsAction;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(7F00FB0A-FCFC-4548-A9F4-72F7EA35C9F1)] [v1_enum] enum AcPlotPolicy
    {
        acPolicyNamed = 0,
        acPolicyLegacy
    } AcPlotPolicy;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(939B4955-140A-46CB-837E-5714AE00C919)] [v1_enum] enum AcDrawingAreaShortCutMenu
    {
        acNoDrawingAreaShortCutMenu = 0,
        acUseDefaultDrawingAreaShortCutMenu
    } AcDrawingAreaShortCutMenu;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BE8CDD74-42DB-4915-97FD-07BB0100D56F)] [v1_enum] enum AcDrawingAreaSCMDefault
    {
        acRepeatLastCommand = 0,
        acSCM
    } AcDrawingAreaSCMDefault;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(DA1502FD-EC74-4C57-B23D-19935EF0FB2B)] [v1_enum] enum AcDrawingAreaSCMEdit
    {
        acEdRepeatLastCommand = 0,
        acEdSCM
    } AcDrawingAreaSCMEdit;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2261FEB7-139A-4D24-8363-4FB1DB46B996)] [v1_enum] enum AcDrawingAreaSCMCommand
    {
        acEnter = 0,
        acEnableSCMOptions,
        acEnableSCM
    } AcDrawingAreaSCMCommand;


    typedef [helpcontext(IDH_ENUMTYPES), uuid(7C34C4E2-23A0-482C-9135-9F42A752352A)] [v1_enum] enum AcLayerStateMask
    {
        acLsNone           = 0x0000,
        acLsOn             = 0x0001,
        acLsFrozen         = 0x0002,
        acLsLocked         = 0x0004,
        acLsPlot           = 0x0008,
        acLsNewViewport    = 0x0010,
        acLsColor          = 0x0020,
        acLsLineType       = 0x0040,
        acLsLineWeight     = 0x0080,
        acLsPlotStyle      = 0x0100,
        acLsAll            = 0xFFFF
    } AcLayerStateMask;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(ADE6AF1C-EFAD-4B81-97C1-8806DFA1828D)] [v1_enum] enum AcShadePlot
    {
        acShadePlotAsDisplayed = 0,
        acShadePlotWireframe,
        acShadePlotHidden,
        acShadePlotRendered
    } AcShadePlot;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(4E49726F-B2A2-421A-B059-39CF6563286C)] [v1_enum] enum AcHatchObjectType
    {
        acHatchObject = 0,
        acGradientObject = 1
    } AcHatchObjectType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8D37AF05-F880-47C9-A922-A4BCDA6E4752)] [v1_enum] enum AcGradientPatternType
    {
        acPreDefinedGradient  = 0,
        acUserDefinedGradient = 1
    } AcGradientPatternType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(DA827B51-08EE-4FB4-B13A-8B7676462861)] [v1_enum] enum AcTableDirection
    {
        acTableTopToBottom  = 0,
        acTableBottomToTop = 1
    } AcTableDirection;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8DB1388A-A433-47F5-B79B-DABCC35855E8)] [v1_enum] enum AcCellAlignment
    {
        acTopLeft        = 1,
        acTopCenter      = 2,
        acTopRight       = 3,
        acMiddleLeft     = 4,
        acMiddleCenter   = 5,
        acMiddleRight    = 6,
        acBottomLeft     = 7,
        acBottomCenter   = 8,
        acBottomRight    = 9
    } AcCellAlignment;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D77CFEB5-19A0-4E0B-AA56-C0B8E097ABEC)] [v1_enum] enum AcRowType
    {
        acUnknownRow     = 0,
        acDataRow        = 1,
        acTitleRow       = 2,
        acHeaderRow      = 4
    } AcRowType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2313CE38-689E-491F-83C1-00409D890AB0)] [v1_enum] enum AcValueDataType
    {
        // These values should match the values of enum 
        // AcValue::DataType in AcValue.h
        acUnknownDataType   = 0,
        acLong              = (0x1 << 0),
        acDouble            = (0x1 << 1),
        acString            = (0x1 << 2),
        acDate              = (0x1 << 3),
        acPoint2d           = (0x1 << 4),
        acPoint3d           = (0x1 << 5),
        acObjectId          = (0x1 << 6),
        acBuffer            = (0x1 << 7),
        acResbuf            = (0x1 << 8),
        acGeneral           = (0x1 << 9),

    } AcValueDataType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8FD6E728-FB0A-40AD-969B-9CBE0D2662AD)] [v1_enum] enum AcValueUnitType
    {
        // These values should match the values of enum 
        // AcValue::UnitType in AcValue.h
        acUnitless      = 0,
        acUnitDistance  = (0x1 << 0),
        acUnitAngle     = (0x1 << 1),
        acUnitArea      = (0x1 << 2),
        acUnitVolume    = (0x1 << 3),

    } AcValueUnitType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F7BBF588-61FE-48FA-BBE2-2FDC0B56E449)] [v1_enum] enum AcParseOption
    {
        // These values should match the values of enum 
        // AcValue::ParseOption in AcValue.h
        acParseOptionNone       = 0,
        acSetDefaultFormat      = (0x1 << 0),
        acPreserveMtextFormat   = (0x1 << 1),

    } AcParseOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F0EFEA30-FFCE-4E05-8FDE-4AE2885B59B3)] [v1_enum] enum AcFormatOption
    {
        // These values should match the values of enum 
        // AcValue::FormatOption in AcValue.h
        kFormatOptionNone       = 0,
        acForEditing            = (0x1 << 0),
        acForExpression         = (0x1 << 1),
        acUseMaximumPrecision   = (0x1 << 2),
        acIgnoreMtextFormat     = (0x1 << 3),

    } AcFormatOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(0B7106B0-9FDE-4CC5-817B-73100155B27D)] [v1_enum] enum AcGridLineType
    {
        acInvalidGridLine = 0,
        acHorzTop        = 1,
        acHorzInside     = 2,
        acHorzBottom     = 4,
        acVertLeft       = 8,
        acVertInside     = 0x10,
        acVertRight      = 0x20 

    } AcGridLineType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5E3DF666-1D94-45CC-9DAC-948ACC657A3D)] [v1_enum] enum AcCellType
    {
        acUnknownCell = 0,
        acTextCell= 1,
        acBlockCell= 2,

    } AcCellType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(DFE81416-F454-4B78-9203-022641F89B9E)] [v1_enum] enum AcCellEdgeMask
    {
        acTopMask= 1,
        acRightMask= 2,
        acBottomMask= 4,
        acLeftMask= 8,

    } AcCellEdgeMask;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BDB4BFF5-77A4-4E4A-BFA9-AB0C27C4F9DE)] [v1_enum] enum AcRotationAngle
    {
        acDegreesUnknown = -1,
        acDegrees000     = 0,
        acDegrees090     = 1,
        acDegrees180     = 2,
        acDegrees270     = 3,

    } AcRotationAngle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3D4481F0-D23D-4B5F-B767-5306F670555D)] [v1_enum] enum AcMergeCellStyleOption
    {
        acMergeCellStyleNone                         = 0,    // AcDb::kMergeCellStyleNone;
        acMergeCellStyleCopyDuplicates               = 0x1,  // AcDb::kMergeCellStyleCopyDuplicates
        acMergeCellStyleOverwriteDuplicates          = 0x2,  // AcDb::kMergeCellStyleOverwriteDuplicates
        acMergeCellStyleConvertDuplicatesToOverrides = 0x4,  // AcDb::kMergeCellStyleConvertDuplicatesToOverrides
        acMergeCellStyleIgnoreNewStyles              = 0x8,  // AcDb::kMergeCellStyleIgnoreNewStyles

    } AcMergeCellStyleOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(BCB748FE-BE26-430E-B64D-6FD52999708D)] [v1_enum] enum AcSelectType
    {
        acTableSelectWindow= 1,
        acTableSelectCrossing= 2,

    } AcSelectType;

	typedef [helpcontext(IDH_ENUMTYPES), uuid(148BD1DA-B808-4C2C-85A1-CED54789CCA7)] [v1_enum] enum AcOleType
    {
		acOTLink = 1,
		acOTEmbedded = 2,
		acOTStatic = 3
	} AcOleType;

	typedef [helpcontext(IDH_ENUMTYPES), uuid(EC6F0013-EF65-4134-9526-3616A89B90DF)] [v1_enum] enum AcOlePlotQuality
    {
        acOPQMonochrome = 0,
        acOPQLowGraphics,
        acOPQHighGraphics
    } AcOlePlotQuality;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(0BEF037E-5E96-49D8-AC72-96437F2C05D1)] [v1_enum] enum AcTableStyleOverrides
    {
        //table
        acTitleSuppressed             = 1,
        acHeaderSuppressed            = 2,
        acFlowDirection               = 3,         
        acHorzCellMargin              = 4,
        acVertCellMargin              = 5,
        acTitleRowColor               = 6,
        acHeaderRowColor              = 7,
        acDataRowColor                = 8,
        acTitleRowFillNone            = 9,
        acHeaderRowFillNone           = 10,
        acDataRowFillNone             = 11,
        acTitleRowFillColor           = 12,
        acHeaderRowFillColor          = 13,
        acDataRowFillColor            = 14,
        acTitleRowAlignment           = 15,
        acHeaderRowAlignment          = 16,
        acDataRowAlignment            = 17,
        acTitleRowTextStyle           = 18,
        acHeaderRowTextStyle          = 19,
        acDataRowTextStyle            = 20,
        acTitleRowTextHeight          = 21,
        acHeaderRowTextHeight         = 22,
        acDataRowTextHeight           = 23,
        acTitleRowDataType            = 24,
        acHeaderRowDataType           = 25,
        acDataRowDataType             = 26,
        // grid color
        acTitleHorzTopColor           = 40,
        acTitleHorzInsideColor        = 41,
        acTitleHorzBottomColor        = 42,
        acTitleVertLeftColor          = 43,
        acTitleVertInsideColor        = 44,
        acTitleVertRightColor         = 45,
        acHeaderHorzTopColor          = 46,
        acHeaderHorzInsideColor       = 47,
        acHeaderHorzBottomColor       = 48,
        acHeaderVertLeftColor         = 49,
        acHeaderVertInsideColor       = 50,
        acHeaderVertRightColor        = 51,
        acDataHorzTopColor            = 52,
        acDataHorzInsideColor         = 53,
        acDataHorzBottomColor         = 54,
        acDataVertLeftColor           = 55,
        acDataVertInsideColor         = 56,
        acDataVertRightColor          = 57,
        // grid line weight
        acTitleHorzTopLineWeight      = 70,
        acTitleHorzInsideLineWeight   = 71,
        acTitleHorzBottomLineWeight   = 72,
        acTitleVertLeftLineWeight     = 73,
        acTitleVertInsideLineWeight   = 74,
        acTitleVertRightLineWeight    = 75,
        acHeaderHorzTopLineWeight     = 76,
        acHeaderHorzInsideLineWeight  = 77,
        acHeaderHorzBottomLineWeight  = 78,
        acHeaderVertLeftLineWeight    = 79,
        acHeaderVertInsideLineWeight  = 80,
        acHeaderVertRightLineWeight   = 81,
        acDataHorzTopLineWeight       = 82,
        acDataHorzInsideLineWeight    = 83,
        acDataHorzBottomLineWeight    = 84,
        acDataVertLeftLineWeight      = 85,
        acDataVertInsideLineWeight    = 86,
        acDataVertRightLineWeight     = 87,
        // grid visibility
        acTitleHorzTopVisibility      = 100,
        acTitleHorzInsideVisibility   = 101,
        acTitleHorzBottomVisibility   = 102,
        acTitleVertLeftVisibility     = 103,
        acTitleVertInsideVisibility   = 104,
        acTitleVertRightVisibility    = 105,
        acHeaderHorzTopVisibility     = 106,
        acHeaderHorzInsideVisibility  = 107,
        acHeaderHorzBottomVisibility  = 108,
        acHeaderVertLeftVisibility    = 109,
        acHeaderVertInsideVisibility  = 110,
        acHeaderVertRightVisibility   = 111,
        acDataHorzTopVisibility       = 112,
        acDataHorzInsideVisibility    = 113,
        acDataHorzBottomVisibility    = 114,
        acDataVertLeftVisibility      = 115,
        acDataVertInsideVisibility    = 116,
        acDataVertRightVisibility     = 117,
        //cell 
        acCellAlign                   = 130,
        acCellBackgroundFillNone      = 131,
        acCellBackgroundColor         = 132,
        acCellContentColor            = 133,
        acCellTextStyle               = 134,
        acCellTextHeight              = 135,
        acCellTopGridColor            = 136,
        acCellRightGridColor          = 137,
        acCellBottomGridColor         = 138,
        acCellLeftGridColor           = 139,
        acCellTopGridLineWeight       = 140,
        acCellRightGridLineWeight     = 141,
        acCellBottomGridLineWeight    = 142,
        acCellLeftGridLineWeight      = 143,
        acCellTopVisibility           = 144,
        acCellRightVisibility         = 145,
        acCellBottomVisibility        = 146,
        acCellLeftVisibility          = 147,
        acCellDataType                = 148,

    } AcTableStyleOverrides;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(ED31EA8A-E180-471A-84FB-AECFDF0FC139)] [v1_enum] enum AcMLineJustification
    {
        acTop        = 0,
        acZero       = 1,
        acBottom     = 2
    } AcMLineJustification;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(3D7A2B86-57DE-4375-BBA9-B87ECB70F18C)] [v1_enum] enum AcBlockScaling
    {
        acAny       = 0,
        acUniform   = 1
    } AcBlockScaling;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(42260D89-AD7D-4214-8327-2F10ED36C297)] [v1_enum] enum AcDynamicBlockReferencePropertyUnitsType
    {
            acNoUnits  = 0,
            acAngular  = 1,
            acDistance = 2,
            acArea     = 3
    } AcDynamicBlockReferencePropertyUnitsType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D8469D63-23CC-4205-9EC4-D3A003ED1B79)] [v1_enum] enum AcSectionState
    {
        acSectionStatePlane     = (0x1 << 0),
        acSectionStateBoundary  = (0x1 << 1),
        acSectionStateVolume    = (0x1 << 2),

    } AcSectionState;

	typedef[helpcontext(IDH_ENUMTYPES), uuid(6F68232F-06C0-4262-98B6-EE0E34FA3872)][v1_enum] enum AcSectionState2
	{
		acSectionState2Plane    = (0x1 << 0),
		acSectionState2Slice    = (0x1 << 1),
		acSectionState2Boundary = (0x1 << 2),
		acSectionState2Volume   = (0x1 << 3),
	} AcSectionState2;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(5C9E97DF-3A01-4029-98B9-A934A464E374)] [v1_enum] enum AcSectionSubItem
    {
        // AcDbSection::SubItem
        // These values should match the values of enum AcDbSection::SubItem
        // in DbSection.h
        acSectionSubItemkNone              = 0,
        acSectionSubItemSectionLine        = (0x1 << 0),
        acSectionSubItemSectionLineTop     = (0x1 << 1),
        acSectionSubItemSectionLineBottom  = (0x1 << 2),
        acSectionSubItemBackLine           = (0x1 << 3),
        acSectionSubItemBackLineTop        = (0x1 << 4),
        acSectionSubItemBackLineBottom     = (0x1 << 5),
        acSectionSubItemVerticalLineTop    = (0x1 << 6),
        acSectionSubItemVerticalLineBottom = (0x1 << 7),

    } AcSectionSubItem;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8A6E2981-22C3-49BD-B332-6544CED7A2AC)] [v1_enum] enum AcSectionType
    {
        // AcDbSectionSettings::SectionType
        // These values should match the values of enum 
        // AcDbSectionSettings::SectionType in DbSection.h
        acSectionTypeLiveSection   = (0x1 << 0),
        acSectionType2dSection     = (0x1 << 1),
        acSectionType3dSection     = (0x1 << 2),

    } AcSectionType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(F51160A0-289A-4A77-B9FB-15960688FFEC)] [v1_enum] enum AcSectionGeneration
    {
        // AcDbSectionSettings::Generation
        // These values should match the values of enum 
        // AcDbSectionSettings::Generation in DbSection.h
        acSectionGenerationSourceAllObjects          = (0x1 << 0),
        acSectionGenerationSourceSelectedObjects     = (0x1 << 1),
        acSectionGenerationDestinationNewBlock       = (0x1 << 4),
        acSectionGenerationDestinationReplaceBlock   = (0x1 << 5),
        acSectionGenerationDestinationFile           = (0x1 << 6),

    } AcSectionGeneration;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(46ADAA51-5886-426A-9B58-6641D1FF1842)] [v1_enum] enum AcHelixConstrainType
    {
        acTurnHeight  = 0,
        acTurns       = 1,
        acHeight      = 2

    } AcHelixConstrainType;

   
    typedef [helpcontext(IDH_ENUMTYPES), uuid(1A379B39-9194-4379-94AB-8C4C811A7587)] [v1_enum] enum AcShadowDisplayType
    {
        acCastsAndReceivesShadows = 0,
        acCastsShadows = 1,
        acReceivesShadows = 2,
        acIgnoreShadows = 3
    } AcShadowDisplayType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(D5B1AE49-7A01-443C-843C-F2D00621F238)] [v1_enum] enum AcLoftedSurfaceNormalType
    {
        acRuled = 0,
        acSmooth = 1,
        acFirstNormal = 2,
        acLastNormal = 3,
        acEndsNormal = 4,
        acAllNormal = 5,
        acUseDraftAngles = 6
    } AcLoftedSurfaceNormalType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9C10059C-A946-405E-B2F6-F440197EC8C3)] [v1_enum] enum AcHelixTwistType
    {
        acCCW = 0,
        acCW = 1
    } AcHelixTwistType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(360B8309-FE43-4687-B141-C245DA9EB27D)] [v1_enum] enum AcUnderlayLayerOverrideType
    {
        acNoOverrides = 0,
        acApplied = 1
    } AcUnderlayLayerOverrideType;

    typedef [uuid(98DC6CFE-6AB7-4BE0-8A8F-74E058E4A4E7)] [v1_enum] enum AcTableFlowDirection
    {
        acTableFlowRight     = 0x1, // AcDb::kTableBreakFlowRight
        acTableFlowDownOrUp = 0x2,  // AcDb::kTableBreakFlowDownOrUp
        acTableFlowLeft= 0x4,       // AcDb::kTableBreakFlowLeft
    } AcTableFlowDirection;

    typedef [uuid(709CEB43-C7BB-485D-9FA1-AD73B46E5C2E)] [v1_enum] enum AcCellMargin
    {
        acCellMarginTop     = 0x1,        // AcDb::kCellMarginTop
        acCellMarginLeft    = 0x2,        // AcDb::kCellMarginLeft
        acCellMarginBottom  = 0x4,        // AcDb::kCellMarginBottom
        acCellMarginRight   = 0x8,        // AcDb::kCellMarginRight
        acCellMarginHorzSpacing = 0x10,   // AcDb::kCellMarginHorzSpacing
        acCellMarginVertSpacing = 0x20,   // AcDb::kCellMarginVertSpacing
    } AcCellMargin;

    typedef [uuid(C4F5794A-EE44-4765-9EE4-C02682DBBB7F)] [v1_enum] enum AcCellContentLayout
    {
        acCellContentLayoutFlow              = 0x1, // AcDb::kCellContentLayoutFlow
        acCellContentLayoutStackedHorizontal = 0x2, // AcDb::kCellContentLayoutStackedHorizontal
        acCellContentLayoutStackedVertical   = 0x4, // AcDb::kCellContentLayoutStackedVertical
    } AcCellContentLayout;

    typedef [uuid(9E612CEF-E236-43AE-B63F-DF0405CF32BA)] [v1_enum] enum AcCellProperty
    {
        // these enum values are from AcDb.h
           acInvalidCellProperty     = 0,            // AcDb::CellProperty::kInvalidCellProperty
           acLock                    = (0x1 << 0),   // AcDb::CellProperty::kLock
           acDataType                = (0x1 << 1),   // AcDb::CellProperty::kDataType
           acDataFormat              = (0x1 << 2),   // AcDb::CellProperty::kDataFormat
           acRotation                = (0x1 << 3),   // AcDb::CellProperty::kRotation
           acScale                   = (0x1 << 4),   // AcDb::CellProperty::kScale
           acAlignmentProperty       = (0x1 << 5),   // AcDb::CellProperty::kAlignment
           acContentColor            = (0x1 << 6),   // AcDb::CellProperty::kContentColor
           acBackgroundColor         = (0x1 << 7),   // AcDb::CellProperty::kBackgroundColor
           acTextStyle               = (0x1 << 8),   // AcDb::CellProperty::kTextStyle
           acTextHeight              = (0x1 << 9),   // AcDb::CellProperty::kTextHeight
           acMarginLeft              = (0x1 << 10),  // AcDb::CellProperty::kMarginLeft
           acMarginTop               = (0x1 << 11),  // AcDb::CellProperty::kMarginTop
           acMarginRight             = (0x1 << 12),  // AcDb::CellProperty::kMarginRight
           acMarginBottom            = (0x1 << 13),  // AcDb::CellProperty::kMarginBottom
           acEnableBackgroundColor   = (0x1 << 14),  // AcDb::CellProperty::kEnableBackgroundColor
           acAutoScale               = (0x1 << 15),  // AcDb::CellProperty::kAutoScale
           acMergeAll                = (0x1 << 16),  // AcDb::CellProperty::kMergeAll
           acFlowDirBtoT             = (0x1 << 17),  // AcDb::CellProperty::kFlowDirBToT
           acContentLayout           = (0x1 << 18),  // AcDb::CellProperty::kContentLayout
           acDataTypeAndFormat       = (acDataType | acDataFormat), // AcDb::CellProperty::kDataTypeAndFormat
           acContentProperties       = (acDataType | acDataFormat | acRotation |
                                       acScale | acAlignmentProperty | acContentColor |  
                                       acTextStyle | acTextHeight | acAutoScale),  
                                                    // AcDb::CellProperty::kContentProperties
           acBitProperties           = (acEnableBackgroundColor | acAutoScale | acMergeAll | acFlowDirBtoT),
                                                    // AcDb::CellProperty::kBitProperties
           acAllCellProperties       = (acLock | acDataType | acDataFormat | acRotation |
                                       acScale | acAlignmentProperty | acContentColor | acBackgroundColor | 
                                       acTextStyle | acTextHeight | acMarginLeft | acMarginTop |
                                       acMarginRight | acMarginBottom | acEnableBackgroundColor | 
                                       acAutoScale | acMergeAll | acFlowDirBtoT | acContentLayout),
                                                    // AcDb::CellProperty::AllCellProperties
    } AcCellProperty;

    typedef [uuid(1C570741-5D4D-49F8-9DE7-784693F5D765)] [v1_enum] enum AcGridLineStyle
    {
        acGridLineStyleSingle = 1,      //AcDb::kGridLineStyleSingle
        acGridLineStyleDouble = 2,      //AcDb::kGridLineStyleDouble
    } AcGridLineStyle;

    typedef [uuid(6EA0A611-5F4E-4C50-990C-F7C7C12DDE41)] [v1_enum] enum AcDataLinkUpdateDirection
    {
        acUpdateDataFromSource   = 0x1,     // AcDb::kUpdateDirSourceToData
        acUpdateSourceFromData   = 0x2,     // AcDb::kUpdateDirDataToSource
    } AcDataLinkUpdateDirection;

    typedef [uuid(87749D8F-6997-4E00-BBDC-1CE67E300A68)] [v1_enum] enum AcDataLinkUpdateOption
    {
        acUpdateOptionNone                                  = 0,         // AcDb::kUpdateDirSourceToData
        acUpdateOptionOverwriteContentModifiedAfterUpdate   = 0x20000,   // AcDb::kUpdateOptionOverwriteContentModifiedAfterUpdate
        acUpdateOptionOverwriteFormatModifiedAfterUpdate    = 0x40000,   // AcDb::kUpdateOptionOverwriteFormatModifiedAfterUpdate
        acUpdateOptionUpdateFullSourceRange                 = 0x80000,   // AcDb::kUpdateOptionUpdateFullSourceRange
        acUpdateOptionIncludeXrefs                          = 0x100000,  // AcDb::kUpdateOptionIncludeXrefs
    } AcDataLinkUpdateOption;

    typedef [uuid(4B11C00C-5D66-42B5-AED1-838F8B32DFD5)] [v1_enum] enum AcCellContentType
    {
        acCellContentTypeUnknown = 0,            //AcDb::CellContentType::kUnknown
        acCellContentTypeValue   = (0x1 << 0),   //AcDb::CellContentType::kCellContentTypeValue
        acCellContentTypeField   = (0x1 << 1),   //AcDb::CellContentType::kUnknown
        acCellContentTypeBlock   = (0x1 << 2),   //AcDb::CellContentType::kCellContentTypeBlock
    } AcCellContentType;

    typedef [uuid(F79DA309-8F17-423C-9601-6D8B3FE2CAAB)][v1_enum] enum AcCellState
    {
        acCellStateNone             = 0,            //AcDb::kCellStateNone
        acCellStateContentLocked    = 0x1,          //AcDb::kCellStateContentLocked
        acCellStateContentReadOnly  = 0x2,          //AcDb::kCellStateContentReadOnly
        acCellStateFormatLocked     = 0x4,          //AcDb::kCellStateFormatLocked
        acCellStateFormatReadOnly   = 0x8,          //AcDb::kCellStateFormatReadOnly
        acCellStateLinked           = 0x10,          //AcDb::kCellStateLinked
        acCellStateContentModified  = 0x20,          //AcDb::kCellStateContentModified
        acCellStateFormatModified   = 0x40,          //AcDb::kCellStateFormatModified
    } AcCellState;

    typedef [uuid(49803F2F-8C96-4FE9-8A67-372A4EC56B15)][v1_enum] enum AcCellOption
    {
        kCellOptionNone    = 0,//AcDb::kCellOptionNone
        kInheritCellFormat = 0x1,//AcDb::kInheritCellFormat
    } AcCellOption;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(8C009EE6-7250-4CA6-B565-80D32D1AB145)] [v1_enum] enum AcTextAttachmentType
    {
        acAttachmentTopOfTop        = 0,
        acAttachmentMiddleOfTop     = 1,
        acAttachmentBottomOfTop     = 2,
        acAttachmentBottomOfTopLine = 3,
        acAttachmentMiddle          = 4,
        acAttachmentMiddleOfBottom  = 5,
        acAttachmentBottomOfBottom  = 6,
        acAttachmentBottomLine      = 7,
        acAttachmentAllLine         = 8
    } AcTextAttachmentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(6BC777BC-D364-4E63-AA9B-4C224DA3AF22)] [v1_enum] enum AcMLeaderType
    {
        acStraightLeader            = 1,
        acSplineLeader              = 2,
        acInVisibleLeader           = 0
    } AcMLeaderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(AD444D2E-3F81-44FC-9CFA-72556D2E56A0)] [v1_enum] enum AcMLeaderContentType
    {
        acNoneContent                = 0,
        acBlockContent               = 1,
        acMTextContent               = 2
    } AcMLeaderContentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E17D1A6F-6388-4A6D-ACE8-2A4836E14D16)] [v1_enum] enum AcTextAlignmentType
    {
        acLeftAlignment             = 0,
        acCenterAlignment           = 1,
        acRightAlignment            = 2
    } AcTextAlignmentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(605339E3-0374-4DDF-BEEE-62EDEBECAA34)] [v1_enum] enum AcTextAngleType
    {
        acInsertAngle               = 0,
        acHorizontalAngle           = 1,
        acAlwaysRightReadingAngle   = 2
    } AcTextAngleType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(2F25B85A-D644-47A6-AAC2-57ADDD026874)] [v1_enum] enum AcBlockConnectionType {
        acConnectExtents            = 0,
        acConnectBase               = 1
    } AcBlockConnectionType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(33E0E6F0-BDD0-43F6-93E1-405461218B08)] [v1_enum] enum AcPredefBlockType
    {
        acBlockImperial      =  0,
        acBlockSlot          =  1,
        acBlockCircle        =  2,
        acBlockBox           =  3,
        acBlockHexagon       =  4,
        acBlockTriangle      =  5,    
        acBlockUserDefined   =  6
    } AcPredefBlockType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E2AAF838-DEAD-4B12-A2E7-5FDFD2FA465C)] [v1_enum] enum AcDrawLeaderOrderType {
        acDrawLeaderHeadFirst            = 0,
        acDrawLeaderTailFirst            = 1
    } AcDrawLeaderOrderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(39424B85-1138-4903-8812-8CA3A1B4E510)] [v1_enum] enum AcDrawMLeaderOrderType {
        acDrawContentFirst            = 0,
        acDrawLeaderFirst            = 1
    } AcDrawMLeaderOrderType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(9E411DCF-C00B-430C-9CA4-B3646652E244)] [v1_enum] enum AcSegmentAngleType {
        acDegreesAny            = 0,
        acDegrees15            = 1,
        acDegrees30            = 2,
        acDegrees45            = 3,
        acDegrees60            = 4,
        acDegrees90            = 6,
        acDegreesHorz            = 12
    } AcSegmentAngleType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(66782F41-C3D0-4666-B606-22B4C4E2A225)] [v1_enum] enum AcTextAttachmentDirection {
        acAttachmentHorizontal = 0,
        acAttachmentVertical   = 1
    } AcTextAttachmentDirection;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(75608240-9AD9-4A60-A5BA-A221A3D67CC9)] [v1_enum] enum AcVerticalTextAttachmentType {
        acAttachmentCenter          = 0,
        acAttachmentLinedCenter     = 1
    } AcVerticalTextAttachmentType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B6A74B8A-1393-41ED-BAB9-3F75C3DB06BC)] [v1_enum] enum AcMeshCreaseType {
        acNoneCrease                = 0,
        acAlwaysCrease              = 1,
        acCreaseByLevel             = 2
    } AcMeshCreaseType;

interface IAcadObject; // NOTE: This forward declaration is needed to prevent an MIDL compiler bug from breaking binary compatibility

    typedef [helpcontext(IDH_ENUMTYPES), uuid(757936BC-DA1C-4D73-8622-3F53BF5B2896)] [v1_enum] enum AcWireframeType {
        acIsolines            = 0,
        acIsoparms            = 1
    } AcWireframeType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(EADEE9AC-0095-4D3D-BDFA-21C944A67141)] [v1_enum] enum AcSplineKnotParameterizationType {
        acChord                    = 0,               //AcGe::kChord
        acSqrtChord                = 1,               //AcGe::kSqrtChord
        acUniformParam             = 2,               //AcGe::kUniform
        acCustomParameterization   = 15               //AcGe::kCustomParameterization
    } AcSplineKnotParameterizationType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1138A0C5-570A-442E-93DD-A16BEFD0066E)] [v1_enum] enum AcSplineFrameType {
        acShow                     = 0,
        acHide                     = 1
    } AcSplineFrameType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(E98AB758-A424-401E-8ACD-061A24D09E8E)] [v1_enum] enum AcSplineMethodType {
        acFit                      = 0,
        acControlVertices          = 1
    } AcSplineMethodType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(33828E0D-7185-4C29-BCBA-F1C4620FCDFB)] [v1_enum] enum AcPointCloudColorType {
        acTrueColor     = 0,
        acByColor       = 1
    } AcPointCloudColorType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(7773043B-E1C3-4F55-9A31-A2EA4B4089EC)] [v1_enum] enum AcPointCloudStylizationType {
        acScanColor     = 0,
        acObjectColor   = 1,
        acNormal        = 2,
        acIntensity     = 3
    } AcPointCloudStylizationType;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(1675A3BF-7479-4CCE-A9B0-332766BB1067)] [v1_enum] enum AcPointCloudIntensityStyle{
        acIntensityGrayscale     = 0,
        acIntensityRainbow       = 1,
        acIntensityRed           = 2,
        acIntensityGreen         = 3,
        acIntensityBlue          = 4,
        acIntensityEditableFlag  = 5
    } AcPointCloudIntensityStyle;

    typedef [helpcontext(IDH_ENUMTYPES), uuid(B8B75316-1D6D-4E94-93A3-41416C1FE72E)] [v1_enum] enum AcPointCloudExStylizationType {
        acRGB                    = 0,
        acObject                 = 1,
        acNormals                = 2,
        acIntensities            = 3,
        acElevation              = 4,
        acClassification         = 5
    } AcPointCloudExStylizationType;